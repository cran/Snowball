<?xml version="1.0" encoding="UTF-8"?>

<project name="snowball" default="dist" basedir=".">
   <!-- compile options -->
   <property name="build.sysclasspath" value="ignore" />
   <property name="build.compiler"     value="modern" />
   <property name="debug"              value="on" />
   <property name="deprecation"        value="off" />
   <property name="optimization"       value="off" />
   <property name="memory"             value="800m"/>

   <!-- directories -->
   <property name="build"    value="build" />
   <property name="dist"     value="dist" />
   <property name="doc"      value="doc" />
   <property name="src"      value="src" />
   <property name="patches"  value="patches" />
   
   <!-- CLASSPATH -->
   <path id="project.class.path">
      <pathelement location="." />
   </path>

   <!-- targets -->
   <target name="init" depends="setupDir, copyFiles" description="Sets up directories and copies files"/>

   <target name="setupDir" description="sets up the output directories">
      <tstamp />
      <mkdir dir="${build}" />
      <mkdir dir="${dist}" />
      <mkdir dir="${doc}" />
   </target>

   <target name="copyFiles" description="Copies all the necessary files to the output directories.">
      <copy todir="${build}">
         <fileset dir="${src}" includes="**/*.xml"/>
         <fileset dir="${src}" includes="**/*.props"/>
         <fileset dir="${src}" includes="**/*.jpg"/>
         <fileset dir="${src}" includes="**/*.jpeg"/>
         <fileset dir="${src}" includes="**/*.gif"/>
      </copy>
   </target>

   <target name="removeJar">
      <delete file="${dist}/sasquatch2.jar"/>
   </target>
   
   <!-- clean -->
   <target name="clean" depends="removeJar, cleanTmp" description="Removes autogenerated files.">
      <delete failonerror="false">
         <fileset dir="${basedir}" defaultexcludes="no">
            <include name="**/*.class" />
            <include name="**/*.scc" />
            <include name="**/.#*" />
         </fileset>
      </delete>

      <delete dir="${build}" failonerror="false" />
      <delete dir="${dist}" failonerror="false" />
   </target>

   <!-- cleanTmp -->
   <target name="cleanTmp" description="Removes temporary files.">
      <delete failonerror="false">
         <fileset dir="${basedir}" defaultexcludes="no">
            <include name="**/*.scc" />
            <include name="**/*~" />
         </fileset>
      </delete>
   </target>

   <!-- patch -->
   <target name="patch" description="Makes the snowball stemmers serializable.">
      <!-- check whether patch already happened -->
      <fail message="Sources already patched? If not remove *.orig files to enable patching.">
         <condition>
            <or>
               <available file="${src}/org/tartarus/snowball/SnowballProgram.java.orig"/>
               <available file="${src}/org/tartarus/snowball/Among.java.orig"/>
            </or>
         </condition>
      </fail>
      <!-- patch files -->
      <patch patchfile="${patches}/snowballprogram.patch" originalfile="${src}/org/tartarus/snowball/SnowballProgram.java" backups="true"/>
      <patch patchfile="${patches}/among.patch" originalfile="${src}/org/tartarus/snowball/Among.java" backups="true"/>
   </target>

   <!-- compile -->
   <target name="compile" depends="init" description="Compiles all the classes.">
      <echo message="Compiling classes for Snowball." />

      <javac srcdir="${src}" destdir="${build}" optimize="${optimization}" 
             debug="${debug}" deprecation="${deprecation}"
             source="1.4" target="1.4">
             
             <include name="org/tartarus/**/*"/>

         <classpath refid="project.class.path" />
         <classpath>
            <pathelement path="${java.class.path}" />
            <pathelement location="." />
         </classpath>
      </javac>
   </target>

   <!-- dist -->
   <target name="dist" depends="init, removeJar, compile" description="Generates the jar archive.">
      <jar jarfile="${dist}/snowball.jar">
         <fileset dir="${build}">
            <include name="*" />
            <include name="org/tartarus/**/*" />
         </fileset>

         <manifest>
            <attribute name="Built-By"   value="${user.name}"/>
         </manifest>
      </jar>
   </target>

   <!-- pack -->
   <target name="pack" description="Packs the build.xml, README and patch files into a ZIP file.">
      <zip destfile="${basedir}/snowball.zip">
         <fileset dir="${basedir}">
            <include name="build.xml" />
            <include name="README" />
            <include name="${patches}/*" />
         </fileset>
      </zip>
   </target>

   <!-- javadoc -->
   <target name="javadoc" description="Generates the Javadoc.">
      <javadoc destdir="${doc}" 
               access="protected" 
               use="true" 
               notree="false" 
               nonavbar="false" 
               noindex="false" 
               splitindex="true" 
               author="true" 
               version="true" 
               nodeprecatedlist="false" 
               nodeprecated="false" 
               sourcepath="${src}"  
               doctitle="Snowball API" 
               packagenames="org.tartarus.*"
               maxmemory="256m"/>
   </target>
</project>
